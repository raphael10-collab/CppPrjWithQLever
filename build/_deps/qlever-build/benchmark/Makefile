# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.31

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/local/bin/cmake

# The command to remove a file.
RM = /usr/local/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/raphy/CppPrjWithQLever

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/raphy/CppPrjWithQLever/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	cd /home/raphy/CppPrjWithQLever/build && /usr/local/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	cd /home/raphy/CppPrjWithQLever/build && /usr/local/bin/cpack --config ./CPackSourceConfig.cmake /home/raphy/CppPrjWithQLever/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/usr/local/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/usr/local/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\" \"dev\" \"gmock\" \"gtest\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/usr/local/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/usr/local/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /home/raphy/CppPrjWithQLever/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/raphy/CppPrjWithQLever/build/CMakeFiles /home/raphy/CppPrjWithQLever/build/_deps/qlever-build/benchmark//CMakeFiles/progress.marks
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/raphy/CppPrjWithQLever/build/CMakeFiles 0
.PHONY : all

# The main codegen target
codegen: cmake_check_build_system
	cd /home/raphy/CppPrjWithQLever/build && $(CMAKE_COMMAND) -E cmake_progress_start /home/raphy/CppPrjWithQLever/build/CMakeFiles /home/raphy/CppPrjWithQLever/build/_deps/qlever-build/benchmark//CMakeFiles/progress.marks
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/codegen
	$(CMAKE_COMMAND) -E cmake_progress_start /home/raphy/CppPrjWithQLever/build/CMakeFiles 0
.PHONY : codegen

# The main clean target
clean:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/raphy/CppPrjWithQLever/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/rule

# Convenience name for target.
benchmark: _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/rule
.PHONY : benchmark

# fast build rule for target.
benchmark/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build
.PHONY : benchmark/fast

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/rule

# Convenience name for target.
benchmarkWithMain: _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/rule
.PHONY : benchmarkWithMain

# fast build rule for target.
benchmarkWithMain/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/build
.PHONY : benchmarkWithMain/fast

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/rule

# Convenience name for target.
BenchmarkExamples: _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/rule
.PHONY : BenchmarkExamples

# fast build rule for target.
BenchmarkExamples/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/build
.PHONY : BenchmarkExamples/fast

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/rule

# Convenience name for target.
JoinAlgorithmBenchmark: _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/rule
.PHONY : JoinAlgorithmBenchmark

# fast build rule for target.
JoinAlgorithmBenchmark/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/build
.PHONY : JoinAlgorithmBenchmark/fast

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/rule

# Convenience name for target.
ParallelMergeBenchmark: _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/rule
.PHONY : ParallelMergeBenchmark

# fast build rule for target.
ParallelMergeBenchmark/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/build
.PHONY : ParallelMergeBenchmark/fast

# Convenience name for target.
_deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/rule:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/rule
.PHONY : _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/rule

# Convenience name for target.
GroupByHashMapBenchmark: _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/rule
.PHONY : GroupByHashMapBenchmark

# fast build rule for target.
GroupByHashMapBenchmark/fast:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/build
.PHONY : GroupByHashMapBenchmark/fast

BenchmarkExamples.o: BenchmarkExamples.cpp.o
.PHONY : BenchmarkExamples.o

# target to build an object file
BenchmarkExamples.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/BenchmarkExamples.cpp.o
.PHONY : BenchmarkExamples.cpp.o

BenchmarkExamples.i: BenchmarkExamples.cpp.i
.PHONY : BenchmarkExamples.i

# target to preprocess a source file
BenchmarkExamples.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/BenchmarkExamples.cpp.i
.PHONY : BenchmarkExamples.cpp.i

BenchmarkExamples.s: BenchmarkExamples.cpp.s
.PHONY : BenchmarkExamples.s

# target to generate assembly for a file
BenchmarkExamples.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/BenchmarkExamples.dir/BenchmarkExamples.cpp.s
.PHONY : BenchmarkExamples.cpp.s

GroupByHashMapBenchmark.o: GroupByHashMapBenchmark.cpp.o
.PHONY : GroupByHashMapBenchmark.o

# target to build an object file
GroupByHashMapBenchmark.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/GroupByHashMapBenchmark.cpp.o
.PHONY : GroupByHashMapBenchmark.cpp.o

GroupByHashMapBenchmark.i: GroupByHashMapBenchmark.cpp.i
.PHONY : GroupByHashMapBenchmark.i

# target to preprocess a source file
GroupByHashMapBenchmark.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/GroupByHashMapBenchmark.cpp.i
.PHONY : GroupByHashMapBenchmark.cpp.i

GroupByHashMapBenchmark.s: GroupByHashMapBenchmark.cpp.s
.PHONY : GroupByHashMapBenchmark.s

# target to generate assembly for a file
GroupByHashMapBenchmark.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/GroupByHashMapBenchmark.dir/GroupByHashMapBenchmark.cpp.s
.PHONY : GroupByHashMapBenchmark.cpp.s

JoinAlgorithmBenchmark.o: JoinAlgorithmBenchmark.cpp.o
.PHONY : JoinAlgorithmBenchmark.o

# target to build an object file
JoinAlgorithmBenchmark.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/JoinAlgorithmBenchmark.cpp.o
.PHONY : JoinAlgorithmBenchmark.cpp.o

JoinAlgorithmBenchmark.i: JoinAlgorithmBenchmark.cpp.i
.PHONY : JoinAlgorithmBenchmark.i

# target to preprocess a source file
JoinAlgorithmBenchmark.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/JoinAlgorithmBenchmark.cpp.i
.PHONY : JoinAlgorithmBenchmark.cpp.i

JoinAlgorithmBenchmark.s: JoinAlgorithmBenchmark.cpp.s
.PHONY : JoinAlgorithmBenchmark.s

# target to generate assembly for a file
JoinAlgorithmBenchmark.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/JoinAlgorithmBenchmark.dir/JoinAlgorithmBenchmark.cpp.s
.PHONY : JoinAlgorithmBenchmark.cpp.s

ParallelMergeBenchmark.o: ParallelMergeBenchmark.cpp.o
.PHONY : ParallelMergeBenchmark.o

# target to build an object file
ParallelMergeBenchmark.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/ParallelMergeBenchmark.cpp.o
.PHONY : ParallelMergeBenchmark.cpp.o

ParallelMergeBenchmark.i: ParallelMergeBenchmark.cpp.i
.PHONY : ParallelMergeBenchmark.i

# target to preprocess a source file
ParallelMergeBenchmark.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/ParallelMergeBenchmark.cpp.i
.PHONY : ParallelMergeBenchmark.cpp.i

ParallelMergeBenchmark.s: ParallelMergeBenchmark.cpp.s
.PHONY : ParallelMergeBenchmark.s

# target to generate assembly for a file
ParallelMergeBenchmark.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/ParallelMergeBenchmark.dir/ParallelMergeBenchmark.cpp.s
.PHONY : ParallelMergeBenchmark.cpp.s

infrastructure/Benchmark.o: infrastructure/Benchmark.cpp.o
.PHONY : infrastructure/Benchmark.o

# target to build an object file
infrastructure/Benchmark.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/Benchmark.cpp.o
.PHONY : infrastructure/Benchmark.cpp.o

infrastructure/Benchmark.i: infrastructure/Benchmark.cpp.i
.PHONY : infrastructure/Benchmark.i

# target to preprocess a source file
infrastructure/Benchmark.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/Benchmark.cpp.i
.PHONY : infrastructure/Benchmark.cpp.i

infrastructure/Benchmark.s: infrastructure/Benchmark.cpp.s
.PHONY : infrastructure/Benchmark.s

# target to generate assembly for a file
infrastructure/Benchmark.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/Benchmark.cpp.s
.PHONY : infrastructure/Benchmark.cpp.s

infrastructure/BenchmarkMain.o: infrastructure/BenchmarkMain.cpp.o
.PHONY : infrastructure/BenchmarkMain.o

# target to build an object file
infrastructure/BenchmarkMain.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/infrastructure/BenchmarkMain.cpp.o
.PHONY : infrastructure/BenchmarkMain.cpp.o

infrastructure/BenchmarkMain.i: infrastructure/BenchmarkMain.cpp.i
.PHONY : infrastructure/BenchmarkMain.i

# target to preprocess a source file
infrastructure/BenchmarkMain.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/infrastructure/BenchmarkMain.cpp.i
.PHONY : infrastructure/BenchmarkMain.cpp.i

infrastructure/BenchmarkMain.s: infrastructure/BenchmarkMain.cpp.s
.PHONY : infrastructure/BenchmarkMain.s

# target to generate assembly for a file
infrastructure/BenchmarkMain.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmarkWithMain.dir/infrastructure/BenchmarkMain.cpp.s
.PHONY : infrastructure/BenchmarkMain.cpp.s

infrastructure/BenchmarkMeasurementContainer.o: infrastructure/BenchmarkMeasurementContainer.cpp.o
.PHONY : infrastructure/BenchmarkMeasurementContainer.o

# target to build an object file
infrastructure/BenchmarkMeasurementContainer.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkMeasurementContainer.cpp.o
.PHONY : infrastructure/BenchmarkMeasurementContainer.cpp.o

infrastructure/BenchmarkMeasurementContainer.i: infrastructure/BenchmarkMeasurementContainer.cpp.i
.PHONY : infrastructure/BenchmarkMeasurementContainer.i

# target to preprocess a source file
infrastructure/BenchmarkMeasurementContainer.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkMeasurementContainer.cpp.i
.PHONY : infrastructure/BenchmarkMeasurementContainer.cpp.i

infrastructure/BenchmarkMeasurementContainer.s: infrastructure/BenchmarkMeasurementContainer.cpp.s
.PHONY : infrastructure/BenchmarkMeasurementContainer.s

# target to generate assembly for a file
infrastructure/BenchmarkMeasurementContainer.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkMeasurementContainer.cpp.s
.PHONY : infrastructure/BenchmarkMeasurementContainer.cpp.s

infrastructure/BenchmarkToJson.o: infrastructure/BenchmarkToJson.cpp.o
.PHONY : infrastructure/BenchmarkToJson.o

# target to build an object file
infrastructure/BenchmarkToJson.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToJson.cpp.o
.PHONY : infrastructure/BenchmarkToJson.cpp.o

infrastructure/BenchmarkToJson.i: infrastructure/BenchmarkToJson.cpp.i
.PHONY : infrastructure/BenchmarkToJson.i

# target to preprocess a source file
infrastructure/BenchmarkToJson.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToJson.cpp.i
.PHONY : infrastructure/BenchmarkToJson.cpp.i

infrastructure/BenchmarkToJson.s: infrastructure/BenchmarkToJson.cpp.s
.PHONY : infrastructure/BenchmarkToJson.s

# target to generate assembly for a file
infrastructure/BenchmarkToJson.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToJson.cpp.s
.PHONY : infrastructure/BenchmarkToJson.cpp.s

infrastructure/BenchmarkToString.o: infrastructure/BenchmarkToString.cpp.o
.PHONY : infrastructure/BenchmarkToString.o

# target to build an object file
infrastructure/BenchmarkToString.cpp.o:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToString.cpp.o
.PHONY : infrastructure/BenchmarkToString.cpp.o

infrastructure/BenchmarkToString.i: infrastructure/BenchmarkToString.cpp.i
.PHONY : infrastructure/BenchmarkToString.i

# target to preprocess a source file
infrastructure/BenchmarkToString.cpp.i:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToString.cpp.i
.PHONY : infrastructure/BenchmarkToString.cpp.i

infrastructure/BenchmarkToString.s: infrastructure/BenchmarkToString.cpp.s
.PHONY : infrastructure/BenchmarkToString.s

# target to generate assembly for a file
infrastructure/BenchmarkToString.cpp.s:
	cd /home/raphy/CppPrjWithQLever/build && $(MAKE) $(MAKESILENT) -f _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/build.make _deps/qlever-build/benchmark/CMakeFiles/benchmark.dir/infrastructure/BenchmarkToString.cpp.s
.PHONY : infrastructure/BenchmarkToString.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... BenchmarkExamples"
	@echo "... GroupByHashMapBenchmark"
	@echo "... JoinAlgorithmBenchmark"
	@echo "... ParallelMergeBenchmark"
	@echo "... benchmark"
	@echo "... benchmarkWithMain"
	@echo "... BenchmarkExamples.o"
	@echo "... BenchmarkExamples.i"
	@echo "... BenchmarkExamples.s"
	@echo "... GroupByHashMapBenchmark.o"
	@echo "... GroupByHashMapBenchmark.i"
	@echo "... GroupByHashMapBenchmark.s"
	@echo "... JoinAlgorithmBenchmark.o"
	@echo "... JoinAlgorithmBenchmark.i"
	@echo "... JoinAlgorithmBenchmark.s"
	@echo "... ParallelMergeBenchmark.o"
	@echo "... ParallelMergeBenchmark.i"
	@echo "... ParallelMergeBenchmark.s"
	@echo "... infrastructure/Benchmark.o"
	@echo "... infrastructure/Benchmark.i"
	@echo "... infrastructure/Benchmark.s"
	@echo "... infrastructure/BenchmarkMain.o"
	@echo "... infrastructure/BenchmarkMain.i"
	@echo "... infrastructure/BenchmarkMain.s"
	@echo "... infrastructure/BenchmarkMeasurementContainer.o"
	@echo "... infrastructure/BenchmarkMeasurementContainer.i"
	@echo "... infrastructure/BenchmarkMeasurementContainer.s"
	@echo "... infrastructure/BenchmarkToJson.o"
	@echo "... infrastructure/BenchmarkToJson.i"
	@echo "... infrastructure/BenchmarkToJson.s"
	@echo "... infrastructure/BenchmarkToString.o"
	@echo "... infrastructure/BenchmarkToString.i"
	@echo "... infrastructure/BenchmarkToString.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/raphy/CppPrjWithQLever/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

